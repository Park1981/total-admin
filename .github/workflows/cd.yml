name: CD
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

# 중복 배포 방지: master에 연속 push 시 이전 배포 취소
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'  # npm 패키지 캐싱으로 빌드 속도 향상

      - run: npm ci || npm i

      # 1) 시크릿 존재 검증
      - name: Verify secrets
        run: |
          test -n "${SUPABASE_ACCESS_TOKEN}" || (echo "SUPABASE_ACCESS_TOKEN empty" && exit 1)
          test -n "${SUPABASE_PROJECT_REF}"   || (echo "SUPABASE_PROJECT_REF empty" && exit 1)

      # 2) Supabase CLI 버전 확인
      - name: Supabase CLI version
        run: npx supabase --version

      # 3) Supabase 프로젝트 연결 (link)
      - name: Link Supabase project
        run: npx supabase link --project-ref "${SUPABASE_PROJECT_REF}"

      # 4) DB 마이그레이션 푸시 (linked 프로젝트에 자동 적용)
      - name: Supabase DB push
        run: npx supabase db push

      # 5) 타입 생성
      - name: Generate TypeScript types
        run: npm run typegen || true

      # 6) 헬스체크
      - name: Health Check (optional)
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL }}
        run: |
          if [ -n "${API_BASE_URL}" ]; then
            curl -sSf "${API_BASE_URL}/healthz" || echo "Health check failed"
          else
            echo "API_BASE_URL not set, skipping health check"
          fi
